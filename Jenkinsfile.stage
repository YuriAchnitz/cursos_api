pipeline {
  agent any
  stages {
    stage("verify tooling") {
      steps {
        bat '''
          docker version
          docker info
          docker compose version 
          curl --version
          '''
      }
    }
    stage('Start container') {
      steps {
        bat 'docker compose -f docker-compose.stage.yml up -d --no-color --wait'
        bat 'docker compose -f docker-compose.stage.yml ps'
      }
    }
    stage('Wait for container') {
      steps {
        bat 'ping 127.0.0.1 -n 21 > nul'
      }
    }
    stage('Run tests against the container') {
      steps {
          bat "curl http://localhost:9090"
      }
    }
  }

post {
    success {
      slackSend(color: '#36a64f', message: "Deployment to stage succeeded!", attachments: [
        [
          fallback: "Deploy to production",
          actions: [
            [
              type: 'button',
              text: 'Deploy to production',
              url: 'http://localhost:8180/view/cursos_api_view/job/cursos_api-pipeline-prod/build?token=AuthToken',
              style: 'primary'
            ]
          ]
        ]
      ])
    }
    failure {
      slackSend color: '#ff0000', message: "Deployment to stage failed!"
    }
  }
}
